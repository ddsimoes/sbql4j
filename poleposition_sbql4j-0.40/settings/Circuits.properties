

# Global settings for all circuits

concurrency=false
threads=1, 3,10

#configurationname=Client/Server
#configurationname=Embedded



# complex
#
# [objects]: number of objects to select from
# [selects]: number of queries run against all objects
#complex.objects=5,6,7
complex.objects=4,5,6
complex.depth=5,5,5
#complex.depth=6,6,6
#complex.selects=500,500,500
complex.selects=100,100,100


# nestedlists
#
# [objects]: number of objects to store as leafs
# [reuse]: number of objects to reuse from the total objects 
# [depth]: depth of the tree
nestedlists.objects=50,50,50
nestedlists.reuse=30,15,1
nestedlists.depth=4,4,4


# inheritancehierarchy
#
# [objects]: number of objects to select from
# [selects]: number of queries run against all objects

inheritancehierarchy.objects=3000,10000,30000
inheritancehierarchy.selects=100,100,100



# flatobject
#
# [objects]: number of objects to store
# [selects]: number of queries to be run against all objects
# [updates]: number of updates and deletes to be run
# [commitinterval]: when to perform an intermediate commit during write and delete
#flatobject.objects=30000,100000,300000
#flatobject.selects=3000,3000,3000
#flatobject.updates=3000,3000,3000
#flatobject.commitinterval=10000,10000,10000
flatobject.objects=30000,100000,300000
flatobject.selects=3000,3000,3000
flatobject.updates=30,30,30
flatobject.commitinterval=10000,10000,10000


# Settings for all circuits in the database benchmark.

# melbourne
#
# [objects]: number of objects to be written, read and deleted
# [commitintervall]: when to perform an intermediate commit during write and delete

melbourne.objects=10000,30000,100000
melbourne.commitinterval=1000,1000,1000


# sepang
#
# [depth]: depth of the tree

sepang.depth=10,12,14



#  bahrain
#
# [objects]: number of objects to select from
# [selects]: number of queries to be run against all objects
# [updates]: number of updates to be run
# [commitinterval]: when to perform an intermediate commit during write and delete

bahrain.objects=3000,10000,30000
bahrain.selects=900,900,900
bahrain.updates=800,800,800
bahrain.commitinterval=1000,1000,1000


# imola
#
# [objects]: number of objects to select from
# [selects]: number of queries run against all objects
# [commitinterval]: when to perform an intermediate commit during write and delete

imola.objects=30000,100000,300000
imola.selects=5000,5000,5000
imola.commitinterval=1000,1000,1000


# barcelona
#
# [objects]: number of objects to select from
# [selects]: number of queries run against all objects

barcelona.objects=3000,10000,30000
barcelona.selects=100,100,100


# monaco
#
# [objects]: number of objects in the database
# [commits]: number of added objects and commits

monaco.objects=100000,300000,1000000
monaco.commits=30,30,30


# nurburgring
#
# [objects]: number of objects to be written, read and deleted
# [commitintervall]: when to perform an intermediate commit during write and delete

nurburgring.objects=10000,30000,100000
nurburgring.commitinterval=1000,1000,1000


# montreal
#
# [size]: number of elements per list

montreal.size=30,100,300


# istanbul
#
# [objects]: number of objects to store
# [selects]: number of query runs, executing the same query

istanbul.objects=10000,30000,100000
istanbul.selects=1000,1000,1000



